{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:3001',\n  withCredentials: false // ostavi false ako koristiš JWT u localStorage\n});\n\n// Interceptor za dodavanje tokena u svaki zahtev\nAPI.interceptors.request.use(config => {\n  try {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n  } catch (e) {\n    console.error(\"Greška pri dodavanju tokena:\", e);\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Interceptor za odgovor - automatski odjavi ako token nije validan\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.warn(\"Neispravan ili istekao token, korisnik odjavljen.\");\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login'; // automatski prebacuje na login\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","e","console","error","Promise","reject","response","_error$response","status","warn","removeItem","window","location","href"],"sources":["C:/Users/Korisnik/Desktop/ITPROJEKATT/FRONTEND/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:3001',\r\n  withCredentials: false, // ostavi false ako koristiš JWT u localStorage\r\n});\r\n\r\n// Interceptor za dodavanje tokena u svaki zahtev\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Greška pri dodavanju tokena:\", e);\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Interceptor za odgovor - automatski odjavi ako token nije validan\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      console.warn(\"Neispravan ili istekao token, korisnik odjavljen.\");\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login'; // automatski prebacuje na login\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,KAAK,CAAE;AAC1B,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;IACrD;EACF,CAAC,CAAC,OAAOI,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,CAAC,CAAC;EAClD;EACA,OAAOL,MAAM;AACf,CAAC,EACAO,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAd,GAAG,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,OAAO,CAACO,IAAI,CAAC,mDAAmD,CAAC;IACjEX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;EACnC;EACA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}